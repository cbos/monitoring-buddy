quarkus.langchain4j.openai.*.log-requests=true
quarkus.langchain4j.openai.*.log-responses=true

quarkus.langchain4j.log-requests=true
quarkus.langchain4j.log-responses=true

quarkus.langchain4j.tracing.include-prompt=true
quarkus.langchain4j.tracing.include-completion=true

# Observability configuration
quarkus.observability.enabled=true
quarkus.observability.lgtm.enabled=true
quarkus.observability.lgtm.shared=true
# Integration with Observability Toolkit (https://github.com/cbos/observability-toolkit)
quarkus.observability.lgtm.image-name=grafana/grafana
quarkus.observability.lgtm.logging=ALL

# OpenTelemetry configuration
quarkus.otel.enabled=true
quarkus.otel.service.name=monitoring-buddy
quarkus.application.name=monitoring-buddy

quarkus.otel.traces.sampler=always_on
quarkus.otel.metrics.enabled=true
quarkus.otel.logs.enabled=true
quarkus.otel.logs.level=INFO


# As OpenTelemetry is enabled, we disable Micrometer binders
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.http-server.enabled=true

# Grafana MCP configuration
#quarkus.langchain4j.mcp.grafana.transport-type=http
#quarkus.langchain4j.mcp.grafana.url=http://localhost:8000/sse
#quarkus.langchain4j.mcp.grafana.tool-execution-timeout=10s
#quarkus.langchain4j.mcp.grafana.resources-timeout=10s

quarkus.langchain4j.mcp.grafana-stdio.transport-type=stdio
quarkus.langchain4j.mcp.grafana-stdio.command=docker,run,-i,--add-host,host.docker.internal:host-gateway,--rm,-e,GRAFANA_URL=http://host.docker.internal:3000,mcp/grafana,-t,stdio,--disable-oncall,--disable-asserts,--disable-sift,--disable-admin,--disable-alerting,--disable-incident

quarkus.langchain4j.mcp.time.transport-type=stdio
quarkus.langchain4j.mcp.time.command=docker,run,-i,--rm,mcp/time

quarkus.vertx.warning-exception-time=20

# Enable logging for McpHttpClientLogger
quarkus.log.category."nl.cbos.monitoringbuddy".level=INFO
quarkus.log.category."io.quarkiverse.langchain4j".level=INFO
quarkus.log.category."io.quarkiverse.langchain4j.mcp.runtime".level=DEBUG